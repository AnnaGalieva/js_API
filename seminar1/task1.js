// Определение текущего размера окна браузера:
// Напишите функцию, которая будет выводить текущую ширину и высоту окна браузера при его изменении.
// Подтверждение закрытия страницы:
// Создайте всплывающее окно или диалоговое окно, которое появляется при попытке закрыть вкладку браузера и спрашивает пользователя, уверен ли он в своем решении закрыть страницу.
// Управление историей переходов:
// Используйте объект history для управления историей переходов на веб-странице. Создайте кнопки "Назад" и "Вперед" для перемещения по истории.


//         Определение текущего размера окна браузера:
// Напишите функцию, которая будет выводить текущую ширину и высоту окна браузера при его изменении.

function showWidthHeight() {
    const widthAndheight = `width: ${window.innerWidth} and height: ${window.innerHeight}`;
    console.log(widthAndheight);
}

window.addEventListener('resize', showWidthHeight);

// Подтверждение закрытия страницы:
// Создайте всплывающее окно или диалоговое окно, которое появляется при попытке закрыть вкладку браузера и спрашивает пользователя, уверен ли он в своем решении закрыть страницу.

window.addEventListener('beforeunload', (e) => {
    e.preventDefault();
    e.returnValue = 'куку';
})

window.onbeforeunload = function () {
    return `Ничего не забыл?`;
};

// Управление историей переходов:
// Используйте объект history для управления историей переходов на веб - странице.Создайте кнопки "Назад" и "Вперед" для перемещения по истории.
const toBtn = document.querySelector('#to');
const fromBtn = document.querySelector('#from');

fromBtn.addEventListener('click', () => {
    window.history.back();
    window.history.go(-1);
});
toBtn.addEventListener('click', () => {
    window.history.forward();
    window.history.go(1);
})

